# Form implementation generated from reading ui file '3AUG1_MoMDMrWEFECSPRExams.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(323, 406)
        MainWindow.setStyleSheet("QWidget {\n"
"    font: 12pt \".AppleSystemUIFont\";\n"
"    background-color: rgb(12, 12, 12);\n"
"    color: #fff;\n"
"}\n"
"\n"
"QSpinBox {\n"
"font-size:14pt;\n"
"font-weight:bold;\n"
"}\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider:horizontal {\n"
"background:transparent;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"border-radius: 5px;\n"
"height: 10px;\n"
"margin: 0px;\n"
"background:rgb(22, 24, 29);\n"
"}\n"
"\n"
"QSlider::groove:horizontal:hover {\n"
"background: rgba(233,123,111,0.25);\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"background: rgb(233,123,111);\n"
"height: 10px;\n"
"width: 10px;\n"
"margin: 0px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"background:rgb(233,123,111);\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"background-color: rgb(255,163,151);\n"
"}\n"
"\n"
"QSlider::handle:horizontal:pressed {\n"
"background-color:rgb(188,78,66);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider::groove:vertical {\n"
"border-radius: 5px;\n"
"width: 60px;\n"
"margin: 0px;\n"
"background:rgb(22, 24, 29);\n"
"}\n"
"\n"
"QSlider::groove:vertical:hover {\n"
"background: rgba(233,123,111,0.25);\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"background: rgb(233,123,111);\n"
"height: 30px;\n"
"width: 40px;\n"
"margin: 0px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"background:transparent;\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"background-color: rgb(255,163,151);\n"
"}\n"
"\n"
"QSlider::handle:vertical:pressed {\n"
"background-color:rgb(188,78,66);\n"
"}\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                    QScrollBar\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QScrollBar:horizontal {border: none;background:transparent;height: 12px;margin: 0px 10px 0px 10px;border-radius: 3px;}\n"
"QScrollBar::handle:horizontal {background: rgb(35,35,37);min-width:24px;border-radius: 4px}\n"
"QScrollBar::add-line:horizontal {border: none;background: transparent;width: 20px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: right;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:horizontal {border: none;background: transparent;width: 20px;border-top-left-radius: 4px;border-bottom-left-radius: 4px;subcontrol-position: left;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {background: none;}\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {background: transparent;}\n"
"QScrollBar:vertical {border: none;background-color:transparent;width: 12px;margin: 10px 0px 10px 0px;border-radius: 4px;}\n"
"QScrollBar::handle:vertical {background: rgb(35,35,37);min-height: 12px;border-radius: 4px}\n"
"QScrollBar::add-line:vertical {border: none;background: transparent;height: 20px;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: bottom;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:vertical {border: none;background: transparent;height: 20px;border-top-left-radius: 4px;border-top-right-radius: 4px;subcontrol-position: top;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {background: none;}\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {background: transparent;}\n"
"\n"
"\n"
"\n"
"    ")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(5, 5, 5, 5)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.mainStack = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.mainStack.setStyleSheet("QSpinBox {\n"
"background:transparent;\n"
"border:none;\n"
"}")
        self.mainStack.setObjectName("mainStack")
        self.mmdm_page = QtWidgets.QWidget()
        self.mmdm_page.setObjectName("mmdm_page")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.mmdm_page)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.mmdmContainer = QtWidgets.QFrame(parent=self.mmdm_page)
        self.mmdmContainer.setObjectName("mmdmContainer")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.mmdmContainer)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setHorizontalSpacing(0)
        self.gridLayout_4.setVerticalSpacing(6)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.mood = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mood.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(242,89,85);}\n"
"    QSpinBox:hover {color: rgb(255,149,145);}\n"
"    QSpinBox:focus {color: rgb(255,119,115);}\n"
"    ")
        self.mood.setFrame(False)
        self.mood.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mood.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mood.setMaximum(10)
        self.mood.setObjectName("mood")
        self.gridLayout_4.addWidget(self.mood, 0, 0, 1, 1)
        self.mania = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mania.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(239,194,100);}\n"
"    QSpinBox:hover {color: rgb(255,254,160);}\n"
"    QSpinBox:focus {color: rgb(255,224,130);}\n"
"    ")
        self.mania.setFrame(False)
        self.mania.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mania.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mania.setMaximum(10)
        self.mania.setObjectName("mania")
        self.gridLayout_4.addWidget(self.mania, 0, 1, 1, 1)
        self.depression = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.depression.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(103,154,201);}\n"
"    QSpinBox:hover {color: rgb(163,214,255);}\n"
"    QSpinBox:focus {color: rgb(133,184,231);}\n"
"    ")
        self.depression.setFrame(False)
        self.depression.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.depression.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.depression.setMaximum(10)
        self.depression.setObjectName("depression")
        self.gridLayout_4.addWidget(self.depression, 0, 2, 1, 1)
        self.mixed_risk = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mixed_risk.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(240,129,92);}\n"
"    QSpinBox:hover {color: rgb(255,189,152);}\n"
"    QSpinBox:focus {color: rgb(255,159,122);}\n"
"    ")
        self.mixed_risk.setFrame(False)
        self.mixed_risk.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mixed_risk.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mixed_risk.setMaximum(10)
        self.mixed_risk.setObjectName("mixed_risk")
        self.gridLayout_4.addWidget(self.mixed_risk, 0, 3, 1, 1)
        self.mixed_risk_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mixed_risk_slider.sizePolicy().hasHeightForWidth())
        self.mixed_risk_slider.setSizePolicy(sizePolicy)
        self.mixed_risk_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(243,131,93);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,171,133);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(193,81,43);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,131,93,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,131,93,0.15);}\n"
"")
        self.mixed_risk_slider.setMaximum(10)
        self.mixed_risk_slider.setInvertedAppearance(False)
        self.mixed_risk_slider.setInvertedControls(False)
        self.mixed_risk_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mixed_risk_slider.setObjectName("mixed_risk_slider")
        self.gridLayout_4.addWidget(self.mixed_risk_slider, 1, 3, 2, 1)
        self.depression_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.depression_slider.sizePolicy().hasHeightForWidth())
        self.depression_slider.setSizePolicy(sizePolicy)
        self.depression_slider.setStyleSheet("\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(102,155,201);}\n"
"QSlider::handle:vertical:hover {background:rgb(142,195,241);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(52,105,151);}\n"
"QSlider::groove:vertical:hover {background:rgba(102,155,201,0.25);}\n"
"QSlider::groove:vertical {background:rgba(102,155,201,0.15);}\n"
"")
        self.depression_slider.setMaximum(10)
        self.depression_slider.setInvertedAppearance(False)
        self.depression_slider.setInvertedControls(False)
        self.depression_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.depression_slider.setObjectName("depression_slider")
        self.gridLayout_4.addWidget(self.depression_slider, 1, 2, 2, 1)
        self.mania_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mania_slider.sizePolicy().hasHeightForWidth())
        self.mania_slider.setSizePolicy(sizePolicy)
        self.mania_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {background:rgb(239,193,100);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,233,140);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(189,143,50);}\n"
"QSlider::groove:vertical:hover {background:rgba(239,193,100,0.25);}\n"
"QSlider::groove:vertical {background:rgba(239,193,100,0.15);}\n"
"\n"
"        ")
        self.mania_slider.setMaximum(10)
        self.mania_slider.setInvertedAppearance(False)
        self.mania_slider.setInvertedControls(False)
        self.mania_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mania_slider.setObjectName("mania_slider")
        self.gridLayout_4.addWidget(self.mania_slider, 1, 1, 2, 1)
        self.mood_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mood_slider.sizePolicy().hasHeightForWidth())
        self.mood_slider.setSizePolicy(sizePolicy)
        self.mood_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical { background:rgb(243,89,85);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,129,125);}\n"
"QSlider::handle:vertical:pressed {background:rgb(193,39,35);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,89,85,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,89,85,0.15);}\n"
"\n"
"        ")
        self.mood_slider.setMaximum(10)
        self.mood_slider.setInvertedAppearance(False)
        self.mood_slider.setInvertedControls(False)
        self.mood_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mood_slider.setObjectName("mood_slider")
        self.gridLayout_4.addWidget(self.mood_slider, 1, 0, 2, 1)
        self.gridLayout_8.addWidget(self.mmdmContainer, 0, 0, 1, 1)
        self.mainStack.addWidget(self.mmdm_page)
        self.wefe_page = QtWidgets.QWidget()
        self.wefe_page.setObjectName("wefe_page")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.wefe_page)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.wefeContainer = QtWidgets.QFrame(parent=self.wefe_page)
        self.wefeContainer.setObjectName("wefeContainer")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.wefeContainer)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setHorizontalSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.excite_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.excite_spinbox.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(107,177,246);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(107,177,246);\n"
"    }\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(138,162,248);}\n"
"    QSpinBox:hover {color: rgb(198,222,255);}\n"
"    QSpinBox:focus {color: rgb(168,192,255);}\n"
"    ")
        self.excite_spinbox.setFrame(False)
        self.excite_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.excite_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.excite_spinbox.setMaximum(10)
        self.excite_spinbox.setObjectName("excite_spinbox")
        self.gridLayout_2.addWidget(self.excite_spinbox, 0, 1, 1, 1)
        self.wellbeing_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.wellbeing_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(184,153,222);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(184,153,222);\n"
"}\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(186,153,219);}\n"
"    QSpinBox:hover {color: rgb(246,213,255);}\n"
"    QSpinBox:focus {color: rgb(216,183,249);}\n"
"    ")
        self.wellbeing_spinbox.setFrame(False)
        self.wellbeing_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.wellbeing_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.wellbeing_spinbox.setMaximum(10)
        self.wellbeing_spinbox.setObjectName("wellbeing_spinbox")
        self.gridLayout_2.addWidget(self.wellbeing_spinbox, 0, 0, 1, 1)
        self.energy_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.energy_spinbox.setStyleSheet("    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(138,162,248);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(138,162,248);\n"
"    }\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(107,177,246);}\n"
"    QSpinBox:hover {color: rgb(167,237,255);}\n"
"    QSpinBox:focus {color: rgb(137,207,255);}\n"
"    ")
        self.energy_spinbox.setFrame(False)
        self.energy_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.energy_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.energy_spinbox.setMaximum(10)
        self.energy_spinbox.setObjectName("energy_spinbox")
        self.gridLayout_2.addWidget(self.energy_spinbox, 0, 3, 1, 1)
        self.focus_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.focus_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(104,174,102);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(104,174,102);\n"
"}\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {background:transparent;color:rgb(96,175,107);}\n"
"QSpinBox:hover {color: rgb(156,235,167);}\n"
"QSpinBox:focus {color: rgb(126,205,137);}\n"
"")
        self.focus_spinbox.setFrame(False)
        self.focus_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.focus_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.focus_spinbox.setMaximum(10)
        self.focus_spinbox.setObjectName("focus_spinbox")
        self.gridLayout_2.addWidget(self.focus_spinbox, 0, 2, 1, 1)
        self.energy_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.energy_slider.sizePolicy().hasHeightForWidth())
        self.energy_slider.setSizePolicy(sizePolicy)
        self.energy_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(138,162,248);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(138,162,248);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(137,163,248);}\n"
"QSlider::handle:vertical:hover {background:rgb(177,203,255);}\n"
"QSlider::handle:vertical:pressed {background:rgb(87,113,198);}\n"
"QSlider::groove:vertical:hover {background:rgba(137,163,248,0.25);}\n"
"QSlider::groove:vertical {background:rgba(137,163,248,0.15);}")
        self.energy_slider.setMaximum(10)
        self.energy_slider.setObjectName("energy_slider")
        self.gridLayout_2.addWidget(self.energy_slider, 1, 3, 2, 1)
        self.focus_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.focus_slider.sizePolicy().hasHeightForWidth())
        self.focus_slider.setSizePolicy(sizePolicy)
        self.focus_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(104,174,102);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(104,174,102);\n"
"}\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"energy slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(96,174,106);}\n"
"QSlider::groove:vertical {background:rgba(96,174,106, 0.15);}\n"
"QSlider::handle:vertical:hover {background:rgb(126,204,136);}\n"
"QSlider::handle:vertical:pressed {background:rgb(76,154,86);}\n"
"QSlider::groove:vertical:hover {background:rgba(96,174,106,0.35);}\n"
"")
        self.focus_slider.setMaximum(10)
        self.focus_slider.setInvertedAppearance(False)
        self.focus_slider.setInvertedControls(False)
        self.focus_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.focus_slider.setObjectName("focus_slider")
        self.gridLayout_2.addWidget(self.focus_slider, 1, 2, 2, 1)
        self.excite_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.excite_slider.sizePolicy().hasHeightForWidth())
        self.excite_slider.setSizePolicy(sizePolicy)
        self.excite_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(107,177,246);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(107,177,246);\n"
"    }\n"
"    \n"
"\n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(150,194,206);}\n"
"QSlider::handle:vertical:hover {background:rgb(190,234,246);}\n"
"QSlider::handle:vertical:pressed {background:rgb(100,144,156);}\n"
"QSlider::groove:vertical:hover {background:rgba(150,194,206,0.25);}\n"
"QSlider::groove:vertical {background:rgba(150,194,206,0.15);}\n"
"\n"
"        ")
        self.excite_slider.setMaximum(10)
        self.excite_slider.setInvertedAppearance(False)
        self.excite_slider.setInvertedControls(False)
        self.excite_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.excite_slider.setObjectName("excite_slider")
        self.gridLayout_2.addWidget(self.excite_slider, 1, 1, 2, 1)
        self.wellbeing_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.wellbeing_slider.sizePolicy().hasHeightForWidth())
        self.wellbeing_slider.setSizePolicy(sizePolicy)
        self.wellbeing_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(171,143,238);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(171,143,238);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(171,145,238);}\n"
"QSlider::handle:vertical:hover {background:rgb(211,185,255);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(121,95,188);}\n"
"QSlider::groove:vertical:hover {background:rgba(171,145,238,0.25);}\n"
"QSlider::groove:vertical {background:rgba(171,145,238,0.15);}\n"
"")
        self.wellbeing_slider.setMaximum(10)
        self.wellbeing_slider.setInvertedAppearance(False)
        self.wellbeing_slider.setInvertedControls(False)
        self.wellbeing_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.wellbeing_slider.setObjectName("wellbeing_slider")
        self.gridLayout_2.addWidget(self.wellbeing_slider, 1, 0, 2, 1)
        self.verticalLayout_2.addWidget(self.wefeContainer)
        self.mainStack.addWidget(self.wefe_page)
        self.cspr_page = QtWidgets.QWidget()
        self.cspr_page.setObjectName("cspr_page")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.cspr_page)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.csprContainer = QtWidgets.QFrame(parent=self.cspr_page)
        self.csprContainer.setStyleSheet("QSpinBox {\n"
"background:transparent;\n"
"border:none;\n"
"}")
        self.csprContainer.setObjectName("csprContainer")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.csprContainer)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setHorizontalSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.calm_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.calm_slider.sizePolicy().hasHeightForWidth())
        self.calm_slider.setSizePolicy(sizePolicy)
        self.calm_slider.setStatusTip("")
        self.calm_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(125,123,202);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(125,123,202);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"calm slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(123,123,199);}\n"
"QSlider::handle:vertical:hover {background:rgb(153,153,229);}\n"
"QSlider::handle:vertical:pressed {background:rgb(103,103,179);}\n"
"QSlider::groove:vertical:hover {background:rgba(123,123,199,0.35);}\n"
"QSlider::groove:vertical {background:rgba(123,123,199,0.15);}")
        self.calm_slider.setMaximum(10)
        self.calm_slider.setInvertedAppearance(False)
        self.calm_slider.setInvertedControls(False)
        self.calm_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.calm_slider.setObjectName("calm_slider")
        self.gridLayout_3.addWidget(self.calm_slider, 1, 0, 1, 1)
        self.pain_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pain_slider.sizePolicy().hasHeightForWidth())
        self.pain_slider.setSizePolicy(sizePolicy)
        self.pain_slider.setStatusTip("")
        self.pain_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(223,134,93);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(223,134,93);\n"
"}\n"
"/* Pain Slider */\n"
"QSlider::handle:vertical {\n"
"background:rgb(229,133,98);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,163,128);}\n"
"QSlider::handle:vertical:pressed {background:rgb(209,113,78);}\n"
"QSlider::groove:vertical:hover {background:rgba(229,133,98,0.35);}\n"
"QSlider::groove:vertical {background:rgba(229,133,98,0.15);}")
        self.pain_slider.setMaximum(10)
        self.pain_slider.setInvertedAppearance(False)
        self.pain_slider.setInvertedControls(False)
        self.pain_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.pain_slider.setObjectName("pain_slider")
        self.gridLayout_3.addWidget(self.pain_slider, 1, 2, 1, 1)
        self.stress_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stress_slider.sizePolicy().hasHeightForWidth())
        self.stress_slider.setSizePolicy(sizePolicy)
        self.stress_slider.setStatusTip("")
        self.stress_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(249,195,94);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(249,195,94);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"stress slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(254,195,105);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,225,135);}\n"
"QSlider::handle:vertical:pressed {background:rgb(234,175,85);}\n"
"QSlider::groove:vertical:hover {background:rgba(254,195,105,0.35);}\n"
"QSlider::groove:vertical {background:rgba(254,195,105,0.15);}\n"
"")
        self.stress_slider.setMaximum(10)
        self.stress_slider.setInvertedAppearance(False)
        self.stress_slider.setInvertedControls(False)
        self.stress_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.stress_slider.setObjectName("stress_slider")
        self.gridLayout_3.addWidget(self.stress_slider, 1, 1, 1, 1)
        self.rage_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rage_slider.sizePolicy().hasHeightForWidth())
        self.rage_slider.setSizePolicy(sizePolicy)
        self.rage_slider.setStatusTip("")
        self.rage_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(220,99,108);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(220,99,108);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"rage slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"#rage_slider::handle:vertical {\n"
"background:rgb(229,100,111);}\n"
"#rage_slider::handle:vertical:hover {background:rgb(255,130,141);}\n"
"#rage_slider::handle:vertical:pressed {background:rgb(209,80,91);}\n"
"#rage_slider::groove:vertical:hover {background:rgba(229,100,111,0.35);}\n"
"#rage_slider::groove:vertical {background:rgba(229,100,111,0.15);}")
        self.rage_slider.setMaximum(10)
        self.rage_slider.setObjectName("rage_slider")
        self.gridLayout_3.addWidget(self.rage_slider, 1, 3, 1, 1)
        self.rage_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.rage_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(220,99,108);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(220,99,108);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"rage spinbox\n"
" //////////////////////////////////////////////////////////////////////// */\n"
"#rage_spinbox {background:transparent;color:rgb(229,100,111);}\n"
"#rage_spinbox:hover {color: rgb(255,160,171);}\n"
"#rage_spinbox:focus {color: rgb(255,130,141);}")
        self.rage_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.rage_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.rage_spinbox.setMaximum(10)
        self.rage_spinbox.setObjectName("rage_spinbox")
        self.gridLayout_3.addWidget(self.rage_spinbox, 0, 3, 1, 1)
        self.pain_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.pain_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(223,134,93);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(223,134,93);\n"
"}\n"
"\n"
"#pain_spinbox {color:rgb(229,133,98);}\n"
"#pain_spinbox:hover {color: rgb(255,193,158);}\n"
"#pain_spinbox:focus {color: rgb(255,163,128);}\n"
"")
        self.pain_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.pain_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.pain_spinbox.setMaximum(10)
        self.pain_spinbox.setObjectName("pain_spinbox")
        self.gridLayout_3.addWidget(self.pain_spinbox, 0, 2, 1, 1)
        self.stress_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.stress_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(249,195,94);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(249,195,94);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"Stress\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"#stress_spinbox {background:transparent;color:rgb(254,195,105);}\n"
"#stress_spinbox:hover {color: rgb(255,255,165);}\n"
"#stress_spinbox:focus {color: rgb(255,225,135); }")
        self.stress_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.stress_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.stress_spinbox.setAccelerated(True)
        self.stress_spinbox.setMaximum(10)
        self.stress_spinbox.setObjectName("stress_spinbox")
        self.gridLayout_3.addWidget(self.stress_spinbox, 0, 1, 1, 1)
        self.calm_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.calm_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(125,123,202);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(125,123,202);\n"
"}\n"
"#calm_spinbox{color:rgb(123,123,199);}\n"
"#calm_spinbox:hover {color: rgb(183,183,255);}\n"
"#calm_spinbox:focus {color: rgb(153,153,229);}\n"
"")
        self.calm_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.calm_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.calm_spinbox.setMaximum(10)
        self.calm_spinbox.setObjectName("calm_spinbox")
        self.gridLayout_3.addWidget(self.calm_spinbox, 0, 0, 1, 1)
        self.verticalLayout_3.addWidget(self.csprContainer)
        self.mainStack.addWidget(self.cspr_page)
        self.mmdm_data_page = QtWidgets.QWidget()
        self.mmdm_data_page.setObjectName("mmdm_data_page")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.mmdm_data_page)
        self.gridLayout_5.setContentsMargins(8, 8, 8, 8)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.mental_mental_table = QtWidgets.QTableView(parent=self.mmdm_data_page)
        self.mental_mental_table.setStyleSheet("\n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:rgb(31,111,42);\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(96,176,107);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"     background:rgb(23, 23, 23);\n"
" }\n"
" ")
        self.mental_mental_table.setShowGrid(False)
        self.mental_mental_table.setSortingEnabled(True)
        self.mental_mental_table.setObjectName("mental_mental_table")
        self.mental_mental_table.horizontalHeader().setStretchLastSection(True)
        self.mental_mental_table.verticalHeader().setVisible(False)
        self.gridLayout_5.addWidget(self.mental_mental_table, 0, 0, 1, 1)
        self.mainStack.addWidget(self.mmdm_data_page)
        self.wefe_data_page = QtWidgets.QWidget()
        self.wefe_data_page.setObjectName("wefe_data_page")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.wefe_data_page)
        self.gridLayout_6.setContentsMargins(8, 8, 8, 8)
        self.gridLayout_6.setSpacing(0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.frame = QtWidgets.QFrame(parent=self.wefe_data_page)
        self.frame.setObjectName("frame")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.summing_box = QtWidgets.QSpinBox(parent=self.frame)
        self.summing_box.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(220,99,108);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(220,99,108);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"rage spinbox\n"
" //////////////////////////////////////////////////////////////////////// */\n"
"QSpinBox {background:transparent;color:rgb(229,100,111);}\n"
"QSpinBox:hover {color: rgb(255,160,171);}\n"
"QSpinBox:focus {color: rgb(255,130,141);}")
        self.summing_box.setFrame(False)
        self.summing_box.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.summing_box.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.summing_box.setMaximum(40)
        self.summing_box.setObjectName("summing_box")
        self.verticalLayout_4.addWidget(self.summing_box, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.wefe_tableview = QtWidgets.QTableView(parent=self.frame)
        self.wefe_tableview.setStyleSheet("\n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:rgb(58,111,157);\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(123,176,222);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"     background:rgb(23, 23, 23);\n"
" }\n"
" ")
        self.wefe_tableview.setShowGrid(False)
        self.wefe_tableview.setSortingEnabled(True)
        self.wefe_tableview.setObjectName("wefe_tableview")
        self.wefe_tableview.horizontalHeader().setStretchLastSection(True)
        self.wefe_tableview.verticalHeader().setVisible(False)
        self.verticalLayout_4.addWidget(self.wefe_tableview)
        self.gridLayout_6.addWidget(self.frame, 0, 0, 1, 1)
        self.mainStack.addWidget(self.wefe_data_page)
        self.cspr_data_page = QtWidgets.QWidget()
        self.cspr_data_page.setObjectName("cspr_data_page")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.cspr_data_page)
        self.gridLayout_7.setContentsMargins(8, 8, 8, 8)
        self.gridLayout_7.setSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.cspr_tableview = QtWidgets.QTableView(parent=self.cspr_data_page)
        self.cspr_tableview.setStyleSheet("\n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:rgb(164,68,33);\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(229,133,98);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"     background:rgb(23, 23, 23);\n"
" }\n"
" ")
        self.cspr_tableview.setShowGrid(False)
        self.cspr_tableview.setSortingEnabled(True)
        self.cspr_tableview.setObjectName("cspr_tableview")
        self.cspr_tableview.horizontalHeader().setStretchLastSection(True)
        self.cspr_tableview.verticalHeader().setVisible(False)
        self.gridLayout_7.addWidget(self.cspr_tableview, 0, 0, 1, 1)
        self.mainStack.addWidget(self.cspr_data_page)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.wefe_date = QtWidgets.QDateEdit(parent=self.page)
        self.wefe_date.setObjectName("wefe_date")
        self.verticalLayout.addWidget(self.wefe_date)
        self.wefe_time = QtWidgets.QTimeEdit(parent=self.page)
        self.wefe_time.setObjectName("wefe_time")
        self.verticalLayout.addWidget(self.wefe_time)
        self.cspr_date = QtWidgets.QDateEdit(parent=self.page)
        self.cspr_date.setObjectName("cspr_date")
        self.verticalLayout.addWidget(self.cspr_date)
        self.cspr_time = QtWidgets.QTimeEdit(parent=self.page)
        self.cspr_time.setObjectName("cspr_time")
        self.verticalLayout.addWidget(self.cspr_time)
        self.mental_mental_date = QtWidgets.QDateEdit(parent=self.page)
        self.mental_mental_date.setObjectName("mental_mental_date")
        self.verticalLayout.addWidget(self.mental_mental_date)
        self.mental_mental_time = QtWidgets.QTimeEdit(parent=self.page)
        self.mental_mental_time.setObjectName("mental_mental_time")
        self.verticalLayout.addWidget(self.mental_mental_time)
        self.mainStack.addWidget(self.page)
        self.gridLayout.addWidget(self.mainStack, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 323, 20))
        self.menubar.setObjectName("menubar")
        self.menuData = QtWidgets.QMenu(parent=self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuCommits = QtWidgets.QMenu(parent=self.menuData)
        self.menuCommits.setObjectName("menuCommits")
        self.menuViews = QtWidgets.QMenu(parent=self.menubar)
        self.menuViews.setObjectName("menuViews")
        self.menuMMDM = QtWidgets.QMenu(parent=self.menuViews)
        self.menuMMDM.setObjectName("menuMMDM")
        self.menuWEFE = QtWidgets.QMenu(parent=self.menuViews)
        self.menuWEFE.setObjectName("menuWEFE")
        self.menuCSPR = QtWidgets.QMenu(parent=self.menuViews)
        self.menuCSPR.setObjectName("menuCSPR")
        MainWindow.setMenuBar(self.menubar)
        self.actionDelete = QtGui.QAction(parent=MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionCommitWEFE = QtGui.QAction(parent=MainWindow)
        self.actionCommitWEFE.setObjectName("actionCommitWEFE")
        self.actionCommitCSPR = QtGui.QAction(parent=MainWindow)
        self.actionCommitCSPR.setObjectName("actionCommitCSPR")
        self.actionCommitMDMr = QtGui.QAction(parent=MainWindow)
        self.actionCommitMDMr.setObjectName("actionCommitMDMr")
        self.actionMMDMInputView = QtGui.QAction(parent=MainWindow)
        self.actionMMDMInputView.setObjectName("actionMMDMInputView")
        self.actionMMDMTableView = QtGui.QAction(parent=MainWindow)
        self.actionMMDMTableView.setObjectName("actionMMDMTableView")
        self.actionWEFEInputView = QtGui.QAction(parent=MainWindow)
        self.actionWEFEInputView.setObjectName("actionWEFEInputView")
        self.actionWEFETableView = QtGui.QAction(parent=MainWindow)
        self.actionWEFETableView.setObjectName("actionWEFETableView")
        self.actionCSPRInputView = QtGui.QAction(parent=MainWindow)
        self.actionCSPRInputView.setObjectName("actionCSPRInputView")
        self.actionCSPRTableView = QtGui.QAction(parent=MainWindow)
        self.actionCSPRTableView.setObjectName("actionCSPRTableView")
        self.menuCommits.addAction(self.actionCommitWEFE)
        self.menuCommits.addAction(self.actionCommitCSPR)
        self.menuCommits.addAction(self.actionCommitMDMr)
        self.menuData.addAction(self.menuCommits.menuAction())
        self.menuData.addAction(self.actionDelete)
        self.menuMMDM.addAction(self.actionMMDMInputView)
        self.menuMMDM.addAction(self.actionMMDMTableView)
        self.menuWEFE.addAction(self.actionWEFEInputView)
        self.menuWEFE.addAction(self.actionWEFETableView)
        self.menuCSPR.addAction(self.actionCSPRInputView)
        self.menuCSPR.addAction(self.actionCSPRTableView)
        self.menuViews.addAction(self.menuMMDM.menuAction())
        self.menuViews.addAction(self.menuWEFE.menuAction())
        self.menuViews.addAction(self.menuCSPR.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuViews.menuAction())

        self.retranslateUi(MainWindow)
        self.mainStack.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mood.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.mania.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.depression.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mixed_risk.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.mixed_risk_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.depression_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mania_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.mood_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.excite_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>FOCUS</p></body></html>"))
        self.wellbeing_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>WELLBEING</p></body></html>"))
        self.energy_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>EXCITEMENT</p></body></html>"))
        self.focus_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>ENERGY</p></body></html>"))
        self.energy_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>ENERGY</p></body></html>"))
        self.focus_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>FOCUS</p></body></html>"))
        self.excite_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>EXCITEMENT</p></body></html>"))
        self.wellbeing_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>WELLBEING</p></body></html>"))
        self.rage_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>Rage</p></body></html>"))
        self.rage_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Rage</p></body></html>"))
        self.pain_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Pain</p></body></html>"))
        self.stress_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Stress</p></body></html>"))
        self.calm_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Calm</p></body></html>"))
        self.summing_box.setToolTip(_translate("MainWindow", "<html><head/><body><p>Summing Box</p></body></html>"))
        self.menuData.setTitle(_translate("MainWindow", "Data"))
        self.menuCommits.setTitle(_translate("MainWindow", "Commits"))
        self.menuViews.setTitle(_translate("MainWindow", "Views"))
        self.menuMMDM.setTitle(_translate("MainWindow", "MMDM"))
        self.menuWEFE.setTitle(_translate("MainWindow", "WEFE"))
        self.menuCSPR.setTitle(_translate("MainWindow", "CSPR"))
        self.actionDelete.setText(_translate("MainWindow", "Delete Selected Records"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Alt+Shift+D"))
        self.actionCommitWEFE.setText(_translate("MainWindow", "Commit WEFE"))
        self.actionCommitWEFE.setShortcut(_translate("MainWindow", "Alt+Shift+2"))
        self.actionCommitCSPR.setText(_translate("MainWindow", "Commit CSPR"))
        self.actionCommitCSPR.setShortcut(_translate("MainWindow", "Alt+Shift+3"))
        self.actionCommitMDMr.setText(_translate("MainWindow", "Commit MDMr"))
        self.actionCommitMDMr.setShortcut(_translate("MainWindow", "Alt+Shift+1"))
        self.actionMMDMInputView.setText(_translate("MainWindow", "Input"))
        self.actionMMDMInputView.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionMMDMTableView.setText(_translate("MainWindow", "TableView"))
        self.actionMMDMTableView.setShortcut(_translate("MainWindow", "Meta+1"))
        self.actionWEFEInputView.setText(_translate("MainWindow", "Input"))
        self.actionWEFEInputView.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionWEFETableView.setText(_translate("MainWindow", "TableView"))
        self.actionWEFETableView.setShortcut(_translate("MainWindow", "Meta+2"))
        self.actionCSPRInputView.setText(_translate("MainWindow", "Input"))
        self.actionCSPRInputView.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionCSPRTableView.setText(_translate("MainWindow", "TableView"))
        self.actionCSPRTableView.setShortcut(_translate("MainWindow", "Meta+3"))
